@page "/listings/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@using ItemInsight.Shared.Domain;

<head>
    <style>
        body {
            background: linear-gradient(to bottom, #87CEEB, #5F9EA0);
        }
        table {
            color: black; /* Set text color for all table content to black */
        }

        th, td {
            color: black; /* Set text color for table headers and cells to black */
            border: 1px solid black; /* Optional: Add border for better visibility */
        }
    </style>
</head>

<h3 class="card-title"><b>Product types</b></h3>

<a href="/listings/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Product type
</a>
<br/>
<br/>

@code {
    private List<Listing>? Listings;

    protected async override Task OnInitializedAsync()
    {
        Listings = await _client.GetFromJsonAsync<List<Listing>>($"{Endpoints.ListingsEndpoint}");
    }

    async Task Delete(int listingId)
    {
        if (Listings != null)
        {
            var listing = Listings.FirstOrDefault(q => q.Id == listingId);
            if (listing != null)
            {
                var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {listing.Name}?");
                if (confirm)
                {
                    try
                    {
                        var response = await _client.DeleteAsync($"{Endpoints.ListingsEndpoint}/{listingId}");
                        if (response.IsSuccessStatusCode)
                        {
                            Listings.Remove(listing);
                            StateHasChanged();
                        }
                        else
                        {
                            var error = await response.Content.ReadAsStringAsync();
                            Console.WriteLine(error);
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine(ex.Message);
                    }
                }
            }
        }
    }
}

@if (Listings == null)
{
    <div class="alert alert-info">Loading Product types...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th><b>Product Type</b></th>
                <th><b>Actions</b></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var listing in Listings)
            {
                <tr>
                    <td><b>@listing.Name</b></td>

                    <td>
                        <a href="/listings/view/@listing.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/listings/edit/@listing.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="(() => Delete(listing.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}