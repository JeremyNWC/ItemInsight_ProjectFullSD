@page "/reviews/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
@using ItemInsight.Shared.Domain;

<h3 class="card-title">Create New Review</h3>
<hr />
<br />

@if (userRole == "Staff")
{
    <FormComponent ButtonText="Create Review" review="review" OnValidSubmit="@CreateReview" />
}

else if (userRole == "Consumer")
{
    <FormComponent ButtonText="Create Review" review="review" OnValidSubmit="@CreateReview" />

}

else if (userRole == "Producer")
{
    <h3><b><center>You are not allowed to make a review as a producer</center></b></h3>
}

@code {
    Review review = new Review();

    private IList<Product>? Products;
    private string userRole = "";

    protected async override Task OnInitializedAsync()
    {
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
        try
        {
            var user = await _client.GetFromJsonAsync<UserProfile>("api/Users");
            if (user != null)
            {
                userRole = user.Role;
            }
        }
        catch (Exception e)
        {

        }
    }

    private async Task CreateReview()
    {
        @if (userRole == "Staff")
        {
            await _client.PostAsJsonAsync(Endpoints.ReviewsEndpoint, review);
            _navManager.NavigateTo("/reviews/");
        }
        else if (userRole == "Consumer")
        {
            await _client.PostAsJsonAsync(Endpoints.ReviewsEndpoint, review);
            _navManager.NavigateTo("/reviewpage/");
        }
    }

}