@using ItemInsight.Shared.Domain;

<EditForm Model="@consumer" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="@consumer.Name" class="form-control" />
            <ValidationMessage For="@(() => consumer.Name)" />
        </div>
    </div>
    </fieldset>

    <fieldset disabled="@Disabled">
    <div class="form-group">
        <label>Contact No:</label>
        <div>
            <InputText @bind-Value="@consumer.ContactNo" class="form-control" />
            <ValidationMessage For="@(() => consumer.ContactNo)" />
        </div>
    </div>
    </fieldset>

    <fieldset disabled="@Disabled">
    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText @bind-Value="@consumer.Email" class="form-control" />
            <ValidationMessage For="@(() => consumer.Email)" />
        </div>
    </div>
    </fieldset>

    <fieldset disabled="@Disabled">
    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputText @bind-Value="@consumer.Password" class="form-control" />
            <ValidationMessage For="@(() => consumer.Password)" />
        </div>
    </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="consumers"/>
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Consumer? consumer { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}
